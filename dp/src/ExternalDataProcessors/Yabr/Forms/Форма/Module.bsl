//----------------------------------------------------------
//This Source Code Form is subject to the terms of the
//Mozilla Public License, v.2.0. If a copy of the MPL
//was not distributed with this file, You can obtain one
//at http://mozilla.org/MPL/2.0/.
//----------------------------------------------------------
//Codebase: https://github.com/ArKuznetsov/yabr.1c/
//----------------------------------------------------------

&НаКлиенте
Перем КаталогТекущейОбработки;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивПараметровЗапуска = СтрРазделить(ПараметрЗапуска, " ");
	
	НомерПараметра = МассивПараметровЗапуска.Найти("--yabrsettings");
	Если НЕ НомерПараметра = Неопределено Тогда
		ПутьКФайлуНастроек = МассивПараметровЗапуска[НомерПараметра + 1];
		ОбработатьДанные(Команды.ОбработатьДанные);
		Отказ = Истина;
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиЭлементовФормы

// Процедура - обработка начала выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Настройки чтения данных (*.json)|*.json";
	Диалог.Заголовок = "Настройки чтения данных";

	ЗавершениеВыбораФайла = Новый ОписаниеОповещения("ПутьКФайлуНачалоВыбораЗавершение", ЭтотОбъект);
	
	Диалог.Показать(ЗавершениеВыбораФайла);
	
КонецПроцедуры // ПутьКФайлуНачалоВыбора()

// Процедура - продолжение обработки выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлуНастроек = ВыбранныеФайлы[0];
	
КонецПроцедуры // ПутьКФайлуНачалоВыбораЗавершение()

#КонецОбласти // ОбработчикиЭлементовФормы

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды "ОбработатьДанные" на сервере
//
&НаСервере
Процедура ОбработатьДанныеНаСервере(Знач ПараметрыОбработкиДанных)
	
	ОбработкаОбъект = ПолучитьВнешнююОбработкуПоИмени("МенеджерОбработкиДанных");
	
	ОбработкаОбъект.УстановитьПараметрыОбработкиДанных(ПараметрыОбработкиДанных);
	
	ОбработкаОбъект.ОбработатьДанные();
	
КонецПроцедуры // ОбработатьДанныеНаСервере()

// Процедура - обработчик команды "ОбработатьДанные"
//
&НаКлиенте
Процедура ОбработатьДанные(Команда)
	
	АдресПараметров = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлуНастроек),
	                                                ЭтотОбъект.УникальныйИдентификатор);
	
	// ПараметрыОбработкиДанных = ПрочитатьПараметрыОбработкиДанныхНаСервере(АдресПараметров);
	
	ОбработатьДанныеНаСервере(АдресПараметров);
	
КонецПроцедуры // ОбработатьДанные()

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

// Функция - ищет внешнюю обработку по указанному имени рядом с текущей и подключает ее
// возвращает объект подключенной обработки
//
// Параметры:
//  ИмяОбработки         - Строка        - имя внешней обработки
// 
// Возвращаемое значение:
//  ВнешняяОбработкаОбъект        - внешняя обработка
// 
&НаСервере
Функция ПолучитьВнешнююОбработкуПоИмени(ИмяОбработки)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ФайлЭтойОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	
	ПутьКОбработке = ФайлЭтойОбработки.Путь + ИмяОбработки + ФайлЭтойОбработки.Расширение;
	
	Возврат ВнешниеОбработки.Создать(ПутьКОбработке, Ложь);
	
КонецФункции // ПолучитьВнешнююОбработкуПоИмени()

#КонецОбласти // СлужебныеПроцедурыИФункции
