//----------------------------------------------------------
//This Source Code Form is subject to the terms of the
//Mozilla Public License, v.2.0. If a copy of the MPL
//was not distributed with this file, You can obtain one
//at http://mozilla.org/MPL/2.0/.
//----------------------------------------------------------
//Codebase: https://github.com/ArKuznetsov/yabr.1c/
//----------------------------------------------------------

&НаКлиенте
Перем КаталогТекущейОбработки;

#Область ОбработчикиЭлементовФормы

// Процедура - обработка начала выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Настройки чтения данных (*.json)|*.json";
	Диалог.Заголовок = "Настройки чтения данных";

	ЗавершениеВыбораФайла = Новый ОписаниеОповещения("ПутьКФайлуНачалоВыбораЗавершение", ЭтаФорма);
	
	Диалог.Показать(ЗавершениеВыбораФайла);
	
КонецПроцедуры // ПутьКФайлуНачалоВыбора()

// Процедура - продолжение обработки выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлуНастроек = ВыбранныеФайлы[0];
	
КонецПроцедуры // ПутьКФайлуНачалоВыбораЗавершение()

#КонецОбласти // ОбработчикиЭлементовФормы

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды "ОбработатьДанные" на сервере
//
&НаСервере
Процедура ОбработатьДанныеНаСервере(Знач ПараметрыОбработкиДанных)
	
	ОбработкаОбъект = ПолучитьВнешнююОбработкуПоИмени("МенеджерОбработкиДанных");
	
	ОбработкаОбъект.УстановитьПараметрыОбработкиДанных(ПараметрыОбработкиДанных);
	
	ОбработкаОбъект.ОбработатьДанные();
	
КонецПроцедуры // ОбработатьДанныеНаСервере()

// Процедура - обработчик команды "ОбработатьДанные"
//
&НаКлиенте
Процедура ОбработатьДанные(Команда)
	
	АдресПараметров = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлуНастроек),
	                                                ЭтотОбъект.УникальныйИдентификатор);
	
	ПараметрыОбработкиДанных = ПрочитатьПараметрыОбработкиДанныхНаСервере(АдресПараметров);
	
	//ПодключитьВнешниеОбработки(ПараметрыОбработкиДанных);

	ОбработатьДанныеНаСервере(ПараметрыОбработкиДанных);
	
КонецПроцедуры // ОбработатьДанные()

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

// Функция - читает и возвращает параметры обработки данных из двоичных данных во временном хранилище
//
// Параметры:
//  АдресПараметров            - Строка                 - адрес двоичных данных параметров во временном хранилище
//
// Возвращаемое значение:
//  Структура                  - настройки обработки данных
//       *ПутьКОбработке       - Строка                 - путь к файлу внешней обработке
//       *ПроцедураОбработки   - Строка                 - имя процедуры обработки данных
//       *Параметры            - Строка                 - структура параметров процедуры обработки данных
//           *<Имя параметра>  - Произвольный           - знаечние параметра процедуры обработки данных
//       *ИмяОбработки         - Строка                 - имя внешней обработки после подключения
//       *Обработчики          - Массив(Структура)      - массив обработчиков данных,
//                                                        полученных от обработки текущего уровня
//                                                        (состав полей элемента аналогичен текущему уровню) 
//
&НаСервере
Функция ПрочитатьПараметрыОбработкиДанныхНаСервере(АдресПараметров)
	
	ОбработкаОбъект = ПолучитьВнешнююОбработкуПоИмени("МенеджерОбработкиДанных");
	
	Возврат ОбработкаОбъект.ПрочитатьПараметрыОбработкиДанных(АдресПараметров);
	
КонецФункции // ПрочитатьПараметрыОбработкиДанныхНаСервере()

// Функция - ищет внешнюю обработку по указанному имени рядом с текущей и подключает ее
// возвращает объект подключенной обработки
//
// Параметры:
//  ИмяОбработки         - Строка        - имя внешней обработки
// 
// Возвращаемое значение:
//  ВнешняяОбработкаОбъект        - внешняя обработка
// 
&НаСервере
Функция ПолучитьВнешнююОбработкуПоИмени(ИмяОбработки)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ФайлЭтойОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	
	ПутьКОбработке = ФайлЭтойОбработки.Путь + ИмяОбработки + ФайлЭтойОбработки.Расширение;
	
	Возврат ВнешниеОбработки.Создать(ПутьКОбработке, Ложь);
	
КонецФункции // ПолучитьВнешнююОбработкуПоИмени()

#КонецОбласти // СлужебныеПроцедурыИФункции
