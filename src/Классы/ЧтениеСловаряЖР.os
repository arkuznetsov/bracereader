Перем Результат;
Перем Параметры;

#Область ПрограммныйИнтерфейс

// Функция - возвращает тип файла, обрабатываемый данной обработкой
// 
// Возвращаемое значение:
//  Строка -  тип файла, обрабатываемый данной обработкой
//
Функция ТипФайла() Экспорт
	
	Возврат Перечисления.ТипыФайлов.СловарьЖР;
	
КонецФункции // ТипФайла()

// Функция - возвращает результат, накопленный обработкой
// 
// Возвращаемое значение:
//  Произвольный -  результат, накопленный обработкой
//
Функция ПолучитьРезультат() Экспорт
	
	Возврат Результат;
	
КонецФункции // ПолучитьРезультат()

// Процедура - проверяет, что элемент является записью словаря журнала регистрации
// и добавляет его в соответствующий словарь
//
// Параметры:
//	Элемент         - Структура       проверяемый элемент
//		*Родитель            - Структура                 - ссылка на элемент-родитель
//		*Уровень             - Число                     - уровень иерархии элемента
//		*Индекс              - Число                     - индекс элемента в массиве значений родителя
//		*НомераСтрок         - Соответсвие(Число)        - массив номеров строк из которых был прочитан элемент и его дочерние элементы
//		*Значения            - Массив(Структура)         - массив дочерних элементов
//
Процедура ДобавитьЗапись(Элемент) Экспорт
	
	Если НЕ Элемент.Уровень = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяСловаря = "";
	Если Элемент.Значения[0] = "1" Тогда
		ИмяСловаря = "Пользователи";
	ИначеЕсли Элемент.Значения[0] = "2" Тогда
		ИмяСловаря = "Компьютеры";
	ИначеЕсли Элемент.Значения[0] = "3" Тогда
		ИмяСловаря = "Приложения";
	ИначеЕсли Элемент.Значения[0] = "4" Тогда
		ИмяСловаря = "События";
	ИначеЕсли Элемент.Значения[0] = "5" Тогда
		ИмяСловаря = "Метаданные";
	ИначеЕсли Элемент.Значения[0] = "6" Тогда
		ИмяСловаря = "Серверы";
	Иначе
		Возврат;
	КонецЕсли;
	
	Запись = Новый Структура();
	
	Если ИмяСловаря = "Пользователи"
	 ИЛИ ИмяСловаря = "Метаданные" Тогда
		Запись.Вставить("Ид", Элемент.Значения[1]);
		Запись.Вставить("Значение", Служебный.ОбработатьКавычкиВСтроке(Элемент.Значения[2]));
		Запись.Вставить("Индекс", Число(Элемент.Значения[3]));
	Иначе
		Запись.Вставить("Значение", Служебный.ОбработатьКавычкиВСтроке(Элемент.Значения[1]));
		Запись.Вставить("Индекс", Число(Элемент.Значения[2]));
	КонецЕсли;
	
	Если НЕ ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат = Новый Структура();
	КонецЕсли;
	
	Если НЕ Результат.Свойство(ИмяСловаря) Тогда
		Результат.Вставить(ИмяСловаря, Новый Соответствие());
	КонецЕсли;
	
	Результат[ИмяСловаря].Вставить(Запись.Индекс, Запись.Значение);
	
КонецПроцедуры // ДобавитьЗапись()

// Функция - проверяет, что элемент является записью словаря журнала регистрации
// и проверяет необходимость удаления элемента
//
// Параметры:
//	Элемент                  - Структура          - проверяемый элемент (см. НужноУдалитьЭлемент)
//		*Родитель            - Структура                 - ссылка на элемент-родитель
//		*Уровень             - Число                     - уровень иерархии элемента
//		*Индекс              - Число                     - индекс элемента в массиве значений родителя
//		*НомераСтрок         - Соответсвие(Число)        - массив номеров строк из которых был прочитан элемент и его дочерние элементы
//		*Значения            - Массив(Структура)         - массив дочерних элементов
//
// Возвращаемое значение:
//   Булево - Истина - элемент нужно удалить после обработки
//
Функция НужноУдалитьЭлемент(Элемент) Экспорт
	
	Если НЕ Элемент.Уровень = 1 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // НужноУдалитьЭлемент()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - Обработчик события формы "ПриСозданииОбъекта"
//
// Параметры:
//	Чтение                - ЧтениеСкобкоФайла  - Объект чтения скобкофайла из которого выполняется вызов обработчика
//	ПараметрыОбработки    - Структура          - дополнительные параметры обработки
//
Процедура ПриСозданииОбъекта(Чтение, ПараметрыОбработки = Неопределено)
	
	ЧтениеСкобкофайла = Чтение;

	Параметры = Новый Структура();

	Если ТипЗнч(ПараметрыОбработки) = Тип("Структура") Тогда
		Параметры = ПараметрыОбработки;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииОбъекта()

#КонецОбласти
